"""initial

Revision ID: ff01b33adfe6
Revises: 
Create Date: 2024-12-24 12:10:23.752999

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ff01b33adfe6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('examination',
    sa.Column('id', sa.String(length=15), nullable=False),
    sa.Column('type', sa.String(length=5), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('grade_level', sa.Integer(), nullable=True),
    sa.Column('max_possible_score', sa.Numeric(), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('area_id', sa.String(length=100), nullable=True),
    sa.Column('longitude', sa.String(length=15), nullable=True),
    sa.Column('latitude', sa.String(length=15), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subject',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('abbreviations', sa.String(length=30), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('municipality',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('region_id', sa.String(length=100), nullable=False),
    sa.Column('area_id', sa.String(length=100), nullable=True),
    sa.Column('longitude', sa.String(length=15), nullable=True),
    sa.Column('latitude', sa.String(length=15), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('place',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=40), nullable=True),
    sa.Column('municipality_id', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=4), nullable=True),
    sa.Column('area_id', sa.String(length=100), nullable=True),
    sa.Column('longitude', sa.String(length=15), nullable=True),
    sa.Column('latitude', sa.String(length=15), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['municipality_id'], ['municipality.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school',
    sa.Column('id', sa.String(length=10), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('place_id', sa.String(length=100), nullable=False),
    sa.Column('longitude', sa.String(length=15), nullable=True),
    sa.Column('latitude', sa.String(length=15), nullable=True),
    sa.Column('wikidata_id', sa.String(length=100), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['place_id'], ['place.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('examination_score',
    sa.Column('examination_id', sa.String(length=15), nullable=False),
    sa.Column('school_id', sa.String(length=10), nullable=False),
    sa.Column('subject', sa.String(length=10), nullable=False),
    sa.Column('people', sa.Integer(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('edit_stamp', sa.String(length=60), nullable=True),
    sa.ForeignKeyConstraint(['examination_id'], ['examination.id'], ),
    sa.ForeignKeyConstraint(['school_id'], ['school.id'], ),
    sa.PrimaryKeyConstraint('examination_id', 'school_id', 'subject')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('examination_score')
    op.drop_table('school')
    op.drop_table('place')
    op.drop_table('municipality')
    op.drop_table('subject')
    op.drop_table('region')
    op.drop_table('examination')
    # ### end Alembic commands ###
